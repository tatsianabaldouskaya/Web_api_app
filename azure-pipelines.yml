trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  SONAR_HOST_URL: 'https://sonarcloud.io'
  SONAR_PROJECT_KEY: 'tatsianabaldouskaya_Web_api_app'
  SONAR_ORG_KEY: 'tatsianabaldouskaya-1'
  COVERAGE_FOLDER: '$(System.DefaultWorkingDirectory)/TestResults'
  COVERAGE_FILE: '$(COVERAGE_FOLDER)/coverage.opencover.xml'

steps:
  - task: UseDotNet@2
    displayName: 'Install SDK'
    inputs:
      version: '8.x'

  - checkout: self

  - task: DotNetCoreCLI@2
    displayName: 'Build the Project'
    inputs:
      command: 'build'
      projects: '**/*.csproj'

  - script: |
      dotnet tool install --global dotnet-sonarscanner
      dotnet-sonarscanner begin /k:"$(SONAR_PROJECT_KEY)" /o:"$(SONAR_ORG_KEY)" /d:sonar.host.url="$(SONAR_HOST_URL)" /d:sonar.login="$SONAR_TOKEN"
      dotnet build
      dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
    displayName: 'Sonar Scanner'
    env:
      SONAR_TOKEN: $(SONAR_TOKEN)
    continueOnError: false

  - task: DotNetCoreCLI@2
    displayName: 'Run Unit Tests'
    inputs:
      command: 'test'
      projects: '**/Tests.csproj'
      arguments: '--filter FullyQualifiedName~Tests.UnitTests --configuration Release --collect:"XPlat Code Coverage" --logger trx --results-directory $(COVERAGE_FOLDER)'
  - script: |
      echo "Installing ReportGenerator..."
      dotnet tool install --global dotnet-reportgenerator-globaltool

      echo "Converting Code Coverage Report..."
      reportgenerator -reports:$(COVERAGE_FOLDER)/**/*.coverage \
        -targetdir:$(COVERAGE_FOLDER)/ConvertedCoverage \
        -reporttypes:opencover
    displayName: 'Convert Coverage Report to OpenCover XML'