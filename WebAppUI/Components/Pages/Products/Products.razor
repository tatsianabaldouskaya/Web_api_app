@page "/Products"
@using WebAppUI.Services
@using WebApplicationApi.Models.DataModels
@using WebApplicationApi.Enums
@inject AuthService AuthService
<h3>Catalogue</h3>

@if (_products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container-fluid text-center">
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var product in _products)
            {
                <div class="col mb-4">
                    <div class="card border-secondary h-100 shadow-sm">
                        <img src="@($"/Images/Book1.jpg")" class="card-img-top" alt="...">
                        <div class="card-body text-start">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">@product.Description</p>
                            <p class="card-text"><strong>Author:</strong> @product.Author</p>
                            <p class="card-text"><strong>Price:</strong> @string.Format("{0:C}", product.Price)</p>
                        </div>
                        <div class="card-footer text-end">
                            @if (AuthService.CurrentRole == Role.Customer)
                            {
                                <a class="btn btn-primary btn-sm" href="/Bookings/Add/@product.Id">Book</a>
                            }
                            @if (AuthService.CurrentRole == Role.Manager)
                            {
                                <a class="btn btn-primary btn-sm" href="/Products/Edit/@product.Id">Edit</a>
                                <a class="btn btn-danger btn-sm">Delete</a>
                                <a class="btn btn-success btn-sm">Create</a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="d-flex justify-content-end mt-3">
        <nav aria-label="...">
            <ul class="pagination">
                <li class="page-item disabled">
                    <a class="page-link">Previous</a>
                </li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="#">2</a>
                </li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div>
}


@inject ProductService ProductService
@code {
    private List<ProductModel> _products;

    protected override async Task OnInitializedAsync()
    {
        _products = await ProductService.GetProductsAsync();
    }
}
