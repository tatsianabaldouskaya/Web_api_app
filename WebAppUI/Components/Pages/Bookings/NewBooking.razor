@page "/Bookings/Add/{Id:int}"

@using WebAppUI.Services
@using Microsoft.AspNetCore.Components
@using WebApplicationApi.Models.DataModels
@using WebApplicationApi.Models.Dtos.Booking
@using WebApplicationApi.Enums

@inject NavigationManager NavigationManager
@inject BookingService BookingService
@inject ProductService ProductService
<h3>Booking Request</h3>

@if (product == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container mt-5">
        <div class="row justify-content-start">
            <div class="col-md-6 col-sm-8 col-12">
                <EditForm Model="bookingDto" OnSubmit="CreateBooking" FormName="addBookingForm">
                    <div class="mb-3">
                        <label for="nameInput" class="form-label">Product</label>
                        <InputText id="nameInput" class="form-control" @bind-Value="product.Name" disabled/>
                    </div>
                    <div class="mb-3">
                        <label for="priceInput" class="form-label">Price</label>
                        <InputNumber id="priceInput" class="form-control" @bind-Value="product.Price" disabled/>
                    </div>
                    <div class="mb-3">
                        <label for="dateInput" class="form-label">Date</label>
                        <InputDate id="dateInput" class="form-control" @bind-Value="bookingDto.Date" />
                    </div>
                    <div class="mb-3">
                        <label for="timeInput" class="form-label">Time</label>
                        <InputDate id="timeInput" class="form-control" @bind-Value="bookingDto.Time" />
                    </div>
                    <div class="mb-3">
                        <label for="addressInput" class="form-label">Address</label>
                        <InputText id="addressInput" class="form-control" @bind-Value="bookingDto.User.Address" />
                    </div>
                    <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@inject AuthService AuthService
@inject UserService UserService
@code {

    [Parameter]
    public int Id { get; set; }

    public ProductModel product;

    public UserModel user;

    [SupplyParameterFromForm]
    public BookingDto bookingDto { get; set; }

    protected override async Task OnInitializedAsync()
    {
        product = await ProductService.GetProductByIdAsync(Id);
        var userId = AuthService.UserId;
        var user = await UserService.GetUserByIdAsync(userId);
        
        bookingDto = new BookingDto()
        {
            Product = new ProductModel()
            {
                Id = product.Id,
                Name = product.Name
            },
            User = new UserModel
            {
                Id = userId,
                Address = user.Address
            },
            Date = DateTime.Today,
            Time = DateTime.Now,
            Status = BookingStatus.Submitted,
            Quantity = 1
        };
    }

    protected async Task CreateBooking()
    {
        await BookingService.CreateBookingAsync(bookingDto);
        NavigationManager.NavigateTo("/Bookings");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/Bookings");
    }
}
