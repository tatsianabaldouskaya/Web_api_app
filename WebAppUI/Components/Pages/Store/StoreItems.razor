@page "/Store"
@using WebAppUI.Services
@using WebApplicationApi.Models.DataModels

@inject AuthService AuthService

@if (_storeItems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <form class="container mb-4">
            <div class="row g-3">
                <div class="col-md-6">
                    <label for="productId" class="form-label">Product Id</label>
                    <input class="form-control" id="productId" type="search" name="ProductId" />
                </div>
                <div class="col-md-6">
                    <label for="productName" class="form-label">Product Name</label>
                    <input class="form-control" id="productName" type="search" name="ProductName" />
                </div>
                <div class="col-md-6">
                    <label for="author" class="form-label">Author</label>
                    <input class="form-control" id="author" type="search" name="Author" />
                </div>
                <div class="col-md-6">
                    <label for="price" class="form-label">Booked Quantity</label>
                    <input class="form-control" id="bookedQty" type="search" name="BookedQty" />
                </div>
                <div class="col-md-6">
                    <label for="price" class="form-label">Available Quantity</label>
                    <input class="form-control" id="availQty" type="search" name="AvailableQty" />
                </div>
                <div class="col-md-6">
                    <label for="price" class="form-label">Delivered Quantity</label>
                    <input class="form-control" id="delQty" type="search" name="DeliveredQty" />
                </div>
                <div class="col-12 text-end mt-2">
                    <button class="btn btn-primary btn-sm" type="submit">Search</button>
                </div>
            </div>
        </form>
    <h3>Search results</h3>
    <div class="table-responsive">
        <table class="table table-bordered align-middle">
            <thead class="table-light">
                <tr>
                    <th>Product Id</th>
                    <th>Product Name</th>
                    <th>Available</th>
                    <th>Booked</th>
                    <th>Delivered</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in _storeItems)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.ProductId</td>
                        <td>@item.AvailableQuantity</td>
                        <td>@item.BookedQuantity</td>
                        <td>@item.SoldQuantity</td>
                        <td style="white-space: nowrap">
                            <a class="btn btn-primary btn-sm">Edit</a>
                            <a class="btn-danger btn-sm">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-end mt-3">
        <a class="btn btn-success btn-sm me-3" >Create</a>
        <nav aria-label="...">
            <ul class="pagination mb-0">
                <li class="page-item disabled">
                    <a class="page-link">Previous</a>
                </li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="#">2</a>
                </li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div>
}


@inject StoreItemsService StoreItemsService
@inject ProductService ProductService
@code {
    private List<StoreItemModel> _storeItems;

    protected override async Task OnInitializedAsync()
    {
        _storeItems = await StoreItemsService.GetStoreItemsAsync();
    }

}

