trigger: none

schedules:
  - cron: "0 8 * * *"
    displayName: "Daily Schedule"
    branches:
      include:
        - main
    always: true

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  dockerRegistry: 'your-registry.azurecr.io'
  dockerImageName: 'your-image-name'
  containerNameApi: 'your-api-container'
  containerNameUi: 'your-ui-container'

steps:
  - task: UseDotNet@2
    displayName: 'Install SDK'
    inputs:
      version: '8.x'

  - checkout: self

  - task: DotNetCoreCLI@2
    displayName: 'Restore Dependencies'
    inputs:
      command: 'restore'
      projects: '**/*.sln'
  - task: DotNetCoreCLI@2
    displayName: 'Build the Project'
    inputs:
      command: 'build'
      projects: '**/*.csproj'

  - task: DockerCompose@1
    inputs:
      containerregistrytype: 'Container Registry'
      dockerComposeFile: '**/docker-compose.yml'
      action: 'Run a Docker Compose command'
      dockerComposeCommand: 'up -d'

  - task: DotNetCoreCLI@2
    displayName: 'Run Tests'
    inputs:
      command: 'test'
      projects: '**/Tests.csproj'
      arguments: '--filter FullyQualifiedName~End2End --logger trx --results-directory $(Build.ArtifactStagingDirectory)/TestResults'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Test Results as Artifact'
    inputs:
      artifactName: 'TestResults'
      publishLocation: 'Container'
      targetPath: '$(Build.ArtifactStagingDirectory)/TestResults'

  - task: DockerCompose@1
    displayName: 'Stop Docker Containers'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerComposeFile: '**/docker-compose.yml'
      dockerComposeCommand: 'down'